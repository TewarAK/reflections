When would you want to use a remote repository rather than keeping all your work
local?

  when the work is ready for public/sharing for others 

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
  
  Pros:
  Let say there are two developers updating git branch. if one developer is working on one features. he can make sure that every thing is good before taking any more code from other developer. 
  
Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches happen in repository. I would choose this for making a new branch for any new experiment.
	forks happen in github server. I would choose this for getting copy of someone's else code from GitHub
	clones happen in getting local copy of existing repository from github. I would choose this for getting copy of my repository from my/any gitHub account. 

What is the benefit of having a copy of the last known state of the remote
stored locally?
    This way git knows what is version on remote. If someone change the remote copy after the last known local copy. and if local user also made change in same place than git and guide you about the manual merge.
    

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    
Commands:

git remote  |    Show all remote locations for the repository
git remote add origin url |     Add a new remote location for the repository. Origin is the default name to use when you create only one remote location. Url should be the https url to the github repository.
git remove -v  |    Outputs the remote locations with verbose information (fetch and push urls)
git push origin master  |    Push the master branch to the remote location origin.
git pull origin master  |    Get the master branch from the remote location origin.
git pull origin master  |    = Git fetch origin + git merge master origin/master
git fetch origin  |    Get the changes from the remote location into the (hidden?) origin/master branch
